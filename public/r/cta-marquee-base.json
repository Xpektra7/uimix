{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cta-marquee-base",
  "type": "registry:block",
  "title": "CTA Marquee Base",
  "description": "Hero section with dual horizontal marquee image galleries and scramble button effect",
  "dependencies": [
    "class-variance-authority",
    "clsx",
    "tailwind-merge"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/default/cta-marquee-base.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport Image from \"next/image\";\nimport { ReactNode, useState } from \"react\";\n\ninterface MarqueeProps {\n  children: ReactNode;\n  pauseOnHover?: boolean;\n  reverse?: boolean;\n  className?: string;\n  speed?: number;\n}\n\nfunction Marquee({\n  children,\n  pauseOnHover = false,\n  reverse = false,\n  className,\n  speed = 40,\n}: MarqueeProps) {\n  return (\n    <div\n      className={cn(\n        \"group flex overflow-hidden [--gap:1rem] [gap:var(--gap)]\",\n        className\n      )}\n      style={\n        {\n          \"--duration\": `${speed}s`,\n        } as React.CSSProperties\n      }\n    >\n      <div\n        className={cn(\n          \"flex min-w-full shrink-0 items-center justify-around gap-[var(--gap)] animate-marquee\",\n          reverse && \"[animation-direction:reverse]\",\n          pauseOnHover && \"group-hover:[animation-play-state:paused]\"\n        )}\n      >\n        {children}\n      </div>\n      <div\n        className={cn(\n          \"flex min-w-full shrink-0 items-center justify-around gap-[var(--gap)] animate-marquee\",\n          reverse && \"[animation-direction:reverse]\",\n          pauseOnHover && \"group-hover:[animation-play-state:paused]\"\n        )}\n        aria-hidden=\"true\"\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n\nconst images = [\n  \"https://images.unsplash.com/photo-1618005182384-a83a8bd57fbe?w=400&h=400&fit=crop\",\n  \"https://images.unsplash.com/photo-1557672172-298e090bd0f1?w=400&h=400&fit=crop\",\n  \"https://images.unsplash.com/photo-1620121692029-d088224ddc74?w=400&h=400&fit=crop\",\n  \"https://images.unsplash.com/photo-1634017839464-5c339ebe3cb4?w=400&h=400&fit=crop\",\n];\n\nconst images2 = [\n  \"https://images.unsplash.com/photo-1618005198919-d3d4b5a92ead?w=400&h=400&fit=crop\",\n  \"https://images.unsplash.com/photo-1617791160505-6f00504e3519?w=400&h=400&fit=crop\",\n  \"https://images.unsplash.com/photo-1635776062127-d379bfcba9f8?w=400&h=400&fit=crop\",\n  \"https://images.unsplash.com/photo-1548191265-cc70d3d45ba1?w=400&h=400&fit=crop\",\n];\n\nfunction ScrambleButton() {\n  const [displayText, setDisplayText] = useState(\"Read More\");\n  const [isScrambling, setIsScrambling] = useState(false);\n  const originalText = \"Read More\";\n  const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\";\n\n  const scramble = () => {\n    if (isScrambling) return;\n    setIsScrambling(true);\n    \n    let iteration = 0;\n    const maxIterations = originalText.length;\n\n    const interval = setInterval(() => {\n      setDisplayText(() =>\n        originalText\n          .split(\"\")\n          .map((letter, index) => {\n            if (index < iteration) {\n              return originalText[index];\n            }\n            return chars[Math.floor(Math.random() * chars.length)];\n          })\n          .join(\"\")\n      );\n\n      if (iteration >= maxIterations) {\n        clearInterval(interval);\n        setIsScrambling(false);\n      }\n\n      iteration += 1 / 3;\n    }, 30);\n  };\n\n  return (\n    <button\n      onMouseEnter={scramble}\n      className=\"px-8 py-3 bg-primary text-primary-foreground rounded-full font-semibold hover:bg-primary/90 transition-colors\"\n    >\n      {displayText}\n    </button>\n  );\n}\n\nexport default function HeroWithMarquee() {\n  return (\n    <div className=\"min-h-screen bg-background text-foreground flex items-center overflow-hidden relative\">\n      <div className=\"container mx-auto px-6 lg:px-12\">\n        <div className=\"grid lg:grid-cols-2 gap-8 items-center\">\n          {/* Left Content */}\n          <div className=\"space-y-6\">\n            <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-bold leading-tight\">\n              The Future of Creative Design\n            </h1>\n            <div className=\"space-y-1 text-muted-foreground\">\n              <p className=\"text-lg\">March 2025</p>\n              <p className=\"text-lg\">Design Studio</p>\n            </div>\n            <ScrambleButton />\n          </div>\n\n          {/* Right Marquee Grid */}\n          <div className=\"relative space-y-4 overflow-hidden\">\n            <Marquee speed={30} reverse className=\"[--gap:1rem]\">\n              {images.map((src, idx) => (\n                <div\n                  key={idx}\n                  className=\"relative w-48 h-48 rounded-2xl overflow-hidden flex-shrink-0\"\n                >\n                  <Image\n                    src={src}\n                    alt={`Image ${idx + 1}`}\n                    fill\n                    className=\"object-cover\"\n                  />\n                </div>\n              ))}\n            </Marquee>\n            <Marquee speed={30} className=\"[--gap:1rem]\">\n              {images2.map((src, idx) => (\n                <div\n                  key={idx}\n                  className=\"relative w-48 h-48 rounded-2xl overflow-hidden flex-shrink-0\"\n                >\n                  <Image\n                    src={src}\n                    alt={`Image ${idx + 5}`}\n                    fill\n                    className=\"object-cover\"\n                  />\n                </div>\n              ))}\n            </Marquee>\n            {/* Vignette edges */}\n            <div className=\"pointer-events-none absolute inset-y-0 left-0 w-32 bg-gradient-to-r from-background to-transparent\"></div>\n            <div className=\"pointer-events-none absolute inset-y-0 right-0 w-32 bg-gradient-to-l from-background to-transparent\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n",
      "type": "registry:component"
    }
  ]
}