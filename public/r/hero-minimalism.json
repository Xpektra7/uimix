{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "hero-minimalism",
  "type": "registry:block",
  "title": "Hero Minimalism",
  "description": "Clean, minimal hero with animated particles and geometric lines",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/default/hero-minimalism.tsx",
      "content": "\"use client\";\n\nimport React, { useEffect, useRef } from \"react\";\n\nexport default function MinimalHero() {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const containerRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const container = containerRef.current;\n    if (!canvas || !container) return;\n    \n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n\n    const setSize = () => {\n      const rect = container.getBoundingClientRect();\n      canvas.width = rect.width;\n      canvas.height = rect.height;\n    };\n    setSize();\n\n    type Particle = {\n      x: number;\n      y: number;\n      speed: number;\n      opacity: number;\n      fadeDelay: number;\n      fadeStart: number;\n      fadingOut: boolean;\n    };\n\n    let particles: Particle[] = [];\n    let raf = 0;\n\n    const count = () => Math.floor((canvas.width * canvas.height) / 7000);\n\n    const make = (): Particle => {\n      const fadeDelay = Math.random() * 600 + 100;\n      return {\n        x: Math.random() * canvas.width,\n        y: Math.random() * canvas.height,\n        speed: Math.random() / 5 + 0.1,\n        opacity: 0.7,\n        fadeDelay,\n        fadeStart: Date.now() + fadeDelay,\n        fadingOut: false,\n      };\n    };\n\n    const reset = (p: Particle) => {\n      p.x = Math.random() * canvas.width;\n      p.y = Math.random() * canvas.height;\n      p.speed = Math.random() / 5 + 0.1;\n      p.opacity = 0.7;\n      p.fadeDelay = Math.random() * 600 + 100;\n      p.fadeStart = Date.now() + p.fadeDelay;\n      p.fadingOut = false;\n    };\n\n    const init = () => {\n      particles = [];\n      for (let i = 0; i < count(); i++) particles.push(make());\n    };\n\n    const draw = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      particles.forEach((p) => {\n        p.y -= p.speed;\n        if (p.y < 0) reset(p);\n        if (!p.fadingOut && Date.now() > p.fadeStart) p.fadingOut = true;\n        if (p.fadingOut) {\n          p.opacity -= 0.008;\n          if (p.opacity <= 0) reset(p);\n        }\n        ctx.fillStyle = `rgba(250, 250, 250, ${p.opacity})`;\n        ctx.fillRect(p.x, p.y, 0.6, Math.random() * 2 + 1);\n      });\n      raf = requestAnimationFrame(draw);\n    };\n\n    const onResize = () => {\n      setSize();\n      init();\n    };\n\n    // Use ResizeObserver to watch container size changes\n    const resizeObserver = new ResizeObserver(onResize);\n    resizeObserver.observe(container);\n\n    init();\n    raf = requestAnimationFrame(draw);\n\n    return () => {\n      resizeObserver.disconnect();\n      cancelAnimationFrame(raf);\n    };\n  }, []);\n\n  return (\n    <section ref={containerRef} className=\"minimal-root\">\n      <style>{`\n@import url('https://fonts.cdnfonts.com/css/hubot-sans');\n\n.minimal-root, .minimal-root * {\n  box-sizing: border-box;\n  -webkit-font-smoothing: antialiased;\n  text-rendering: optimizeLegibility;\n}\n\n.minimal-root {\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  min-height: 600px;\n  overflow: hidden;\n\n  --bg: #0a0a0a;\n  --fg: #fafafa;\n  --muted: #a1a1aa;\n  --border: #27272a;\n  --accent: #e5e7eb;\n\n  background: var(--bg);\n  color: var(--fg);\n  font-family: 'Hubot Sans', ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Inter, Helvetica, Arial, \"Apple Color Emoji\",\"Segoe UI Emoji\";\n}\n\n/* header */\n.header {\n  position: absolute;\n  top: 0; left: 0; right: 0;\n  padding: 20px 24px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid var(--border);\n}\n.brand {\n  font-size: 14px;\n  letter-spacing: 0.06em;\n  text-transform: uppercase;\n  color: var(--muted);\n  text-decoration: none;\n}\n.cta {\n  height: 36px;\n  padding: 0 14px;\n  border-radius: 10px;\n  background: #111;\n  color: var(--fg);\n  border: 1px solid var(--border);\n  font-size: 13px;\n  line-height: 36px;\n}\n.cta:hover { background: #0d0d0d; }\n\n/* hero center */\n.hero {\n  position: absolute;\n  inset: 0;\n  display: grid;\n  place-items: center;\n  text-align: center;\n  pointer-events: none;\n}\n.kicker {\n  font-size: 12px;\n  letter-spacing: 0.14em;\n  text-transform: uppercase;\n  color: var(--muted);\n  margin-bottom: 14px;\n}\n.title {\n  font-weight: 600;\n  font-size: clamp(32px, 8vw, 88px);\n  line-height: 0.95;\n  margin: 0;\n  color: var(--fg);\n  text-shadow: none;\n}\n.subtitle {\n  margin-top: 18px;\n  font-size: clamp(14px, 2.2vw, 18px);\n  color: var(--muted);\n}\n\n/* accent lines container */\n.accent-lines {\n  position: absolute;\n  inset: 0;\n  pointer-events: none;\n}\n\n/* base line visuals */\n.hline, .vline {\n  position: absolute;\n  background: var(--border);\n  opacity: .75;\n  will-change: transform, opacity;\n}\n\n/* horizontal lines */\n.hline {\n  height: 1px; left: 0; right: 0;\n  transform: scaleX(0);\n  transform-origin: 50% 50%;\n  animation: drawX 800ms cubic-bezier(.22,.61,.36,1) forwards;\n}\n.hline:nth-child(1){ top: 20%; animation-delay: 150ms; }\n.hline:nth-child(2){ top: 50%; animation-delay: 280ms; }\n.hline:nth-child(3){ top: 80%; animation-delay: 410ms; }\n\n/* vertical lines */\n.vline {\n  width: 1px; top: 0; bottom: 0;\n  transform: scaleY(0);\n  transform-origin: 50% 0%;\n  animation: drawY 900ms cubic-bezier(.22,.61,.36,1) forwards;\n}\n.vline:nth-child(4){ left: 20%; animation-delay: 520ms; }\n.vline:nth-child(5){ left: 50%; animation-delay: 640ms; }\n.vline:nth-child(6){ left: 80%; animation-delay: 760ms; }\n\n/* subtle gradient shimmer while drawing */\n.hline::after, .vline::after{\n  content:\"\";\n  position:absolute;\n  inset:0;\n  background: linear-gradient(90deg, transparent, rgba(250,250,250,.25), transparent);\n  opacity:0;\n  animation: shimmer 900ms ease-out forwards;\n}\n.hline:nth-child(1)::after{ animation-delay: 150ms; }\n.hline:nth-child(2)::after{ animation-delay: 280ms; }\n.hline:nth-child(3)::after{ animation-delay: 410ms; }\n.vline:nth-child(4)::after{ animation-delay: 520ms; }\n.vline:nth-child(5)::after{ animation-delay: 640ms; }\n.vline:nth-child(6)::after{ animation-delay: 760ms; }\n\n/* keyframes */\n@keyframes drawX {\n  0% { transform: scaleX(0); opacity: 0; }\n  60% { opacity: .9; }\n  100% { transform: scaleX(1); opacity: .75; }\n}\n@keyframes drawY {\n  0% { transform: scaleY(0); opacity: 0; }\n  60% { opacity: .9; }\n  100% { transform: scaleY(1); opacity: .75; }\n}\n@keyframes shimmer {\n  0% { opacity: .0; }\n  30% { opacity: .25; }\n  100% { opacity: 0; }\n}\n\n/* canvas */\n.particleCanvas {\n  position: absolute;\n  inset: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  mix-blend-mode: screen;\n  opacity: .6;\n}\n\n/* footer section (copy) */\n.content {\n  position: absolute;\n  left: 0; right: 0; bottom: 0;\n  padding: 32px 24px;\n  border-top: 1px solid var(--border);\n  display: grid;\n  place-items: center;\n  text-align: center;\n  gap: 6px;\n}\n.content .tag {\n  font-size: 12px;\n  color: var(--muted);\n  letter-spacing: 0.08em;\n  text-transform: uppercase;\n}\n.content .heading {\n  font-size: 22px;\n  font-weight: 600;\n  color: var(--fg);\n}\n.content .desc {\n  font-size: 14px;\n  color: var(--muted);\n  max-width: 680px;\n}\n      `}</style>\n\n      {/* Header */}\n      <header className=\"header\">\n        <a className=\"brand\" href=\"https://codepen.io/RAFA3L\" target=\"_blank\" rel=\"noopener noreferrer\">\n          NOVA\n        </a>\n        <button className=\"cta\" type=\"button\" onClick={() => alert(\"Weâ€™ll get back to you soon.\")}>\n          Contact\n        </button>\n      </header>\n\n      {/* Particles */}\n      <canvas ref={canvasRef} className=\"particleCanvas\" />\n\n      {/* Accent Lines (now animated on mount) */}\n      <div className=\"accent-lines\">\n        <div className=\"hline\" />\n        <div className=\"hline\" />\n        <div className=\"hline\" />\n        <div className=\"vline\" />\n        <div className=\"vline\" />\n        <div className=\"vline\" />\n      </div>\n\n      {/* Hero */}\n      <main className=\"hero\">\n        <div>\n          <div className=\"kicker\">Introducing</div>\n          <h1 className=\"title\">Build fast.<br/>Ship clean.</h1>\n          <p className=\"subtitle\">A minimal React starter focused on clarity, speed, and maintainability.</p>\n        </div>\n      </main>\n\n      {/* Bottom content */}\n      <section className=\"content\">\n        <div className=\"tag\">Designed for focus</div>\n        <div className=\"heading\">Composable. Accessible. Production-ready.</div>\n        <p className=\"desc\">\n          Start with sensible defaults, ship without the noise, and scale your UI with confidence. Works across any app architecture.\n        </p>\n      </section>\n    </section>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}