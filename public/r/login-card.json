{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "login-card",
  "type": "registry:block",
  "title": "Login Card",
  "description": "Modern login card with animated background, social auth options, and elegant design",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/default/login-card.tsx",
      "content": " \"use client\";\n\nimport * as React from \"react\";\nimport { useState, useRef, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  CardFooter,\n} from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  Eye,\n  EyeOff,\n  Github,\n  Lock,\n  Mail,\n  ArrowRight,\n  Chrome,\n} from \"lucide-react\";\n\nexport default function LoginCardSection() {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas?.getContext(\"2d\");\n    if (!canvas || !ctx) return;\n\n    const setSize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    setSize();\n\n    type P = { x: number; y: number; v: number; o: number };\n    let ps: P[] = [];\n    let raf = 0;\n\n    const make = () => ({\n      x: Math.random() * canvas.width,\n      y: Math.random() * canvas.height,\n      v: Math.random() * 0.25 + 0.05,\n      o: Math.random() * 0.35 + 0.15,\n    });\n\n    const init = () => {\n      ps = [];\n      const count = Math.floor((canvas.width * canvas.height) / 9000);\n      for (let i = 0; i < count; i++) ps.push(make());\n    };\n\n    const draw = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ps.forEach((p) => {\n        p.y -= p.v;\n        if (p.y < 0) {\n          p.x = Math.random() * canvas.width;\n          p.y = canvas.height + Math.random() * 40;\n          p.v = Math.random() * 0.25 + 0.05;\n          p.o = Math.random() * 0.35 + 0.15;\n        }\n        ctx.fillStyle = `rgba(250,250,250,${p.o})`;\n        ctx.fillRect(p.x, p.y, 0.7, 2.2);\n      });\n      raf = requestAnimationFrame(draw);\n    };\n\n    const onResize = () => {\n      setSize();\n      init();\n    };\n\n    window.addEventListener(\"resize\", onResize);\n    init();\n    raf = requestAnimationFrame(draw);\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n      cancelAnimationFrame(raf);\n    };\n  }, []);\n\n  return (\n    <section className=\"relative w-full min-h-screen bg-black text-zinc-50\">\n      <style>{`\n        .accent-lines{position:absolute;inset:0;pointer-events:none;opacity:.7}\n        .hline,.vline{position:absolute;background:#27272a;will-change:transform,opacity}\n        .hline{left:0;right:0;height:1px;transform:scaleX(0);transform-origin:50% 50%;animation:drawX .8s cubic-bezier(.22,.61,.36,1) forwards}\n        .vline{top:0;bottom:0;width:1px;transform:scaleY(0);transform-origin:50% 0%;animation:drawY .9s cubic-bezier(.22,.61,.36,1) forwards}\n        .hline:nth-child(1){top:18%;animation-delay:.12s}\n        .hline:nth-child(2){top:50%;animation-delay:.22s}\n        .hline:nth-child(3){top:82%;animation-delay:.32s}\n        .vline:nth-child(4){left:22%;animation-delay:.42s}\n        .vline:nth-child(5){left:50%;animation-delay:.54s}\n        .vline:nth-child(6){left:78%;animation-delay:.66s}\n        .hline::after,.vline::after{content:\"\";position:absolute;inset:0;background:linear-gradient(90deg,transparent,rgba(250,250,250,.24),transparent);opacity:0;animation:shimmer .9s ease-out forwards}\n        .hline:nth-child(1)::after{animation-delay:.12s}\n        .hline:nth-child(2)::after{animation-delay:.22s}\n        .hline:nth-child(3)::after{animation-delay:.32s}\n        .vline:nth-child(4)::after{animation-delay:.42s}\n        .vline:nth-child(5)::after{animation-delay:.54s}\n        .vline:nth-child(6)::after{animation-delay:.66s}\n        @keyframes drawX{0%{transform:scaleX(0);opacity:0}60%{opacity:.95}100%{transform:scaleX(1);opacity:.7}}\n        @keyframes drawY{0%{transform:scaleY(0);opacity:0}60%{opacity:.95}100%{transform:scaleY(1);opacity:.7}}\n        @keyframes shimmer{0%{opacity:0}35%{opacity:.25}100%{opacity:0}}\n\n        /* === Card minimal fade-up animation === */\n        .card-animate {\n          opacity: 0;\n          transform: translateY(20px);\n          animation: fadeUp 0.8s cubic-bezier(.22,.61,.36,1) 0.4s forwards;\n        }\n        @keyframes fadeUp {\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n      `}</style>\n\n      {/* Subtle vignette */}\n      <div className=\"absolute inset-0 pointer-events-none [background:radial-gradient(80%_60%_at_50%_30%,rgba(255,255,255,0.06),transparent_60%)]\" />\n\n      {/* Animated accent lines */}\n      <div className=\"accent-lines\">\n        <div className=\"hline\" />\n        <div className=\"hline\" />\n        <div className=\"hline\" />\n        <div className=\"vline\" />\n        <div className=\"vline\" />\n        <div className=\"vline\" />\n      </div>\n\n      {/* Particles */}\n      <canvas\n        ref={canvasRef}\n        className=\"absolute inset-0 w-full h-full opacity-50 mix-blend-screen pointer-events-none\"\n      />\n\n      {/* Header */}\n      <header className=\"absolute left-0 right-0 top-0 flex items-center justify-between px-6 py-4 border-b border-zinc-800/80\">\n        <span className=\"text-xs tracking-[0.14em] uppercase text-zinc-400\">\n          NOVA\n        </span>\n        <Button\n          variant=\"outline\"\n          className=\"h-9 rounded-lg border-zinc-800 bg-zinc-900 text-zinc-50 hover:bg-zinc-900/80\"\n        >\n          <span className=\"mr-2\">Contact</span>\n          <ArrowRight className=\"h-4 w-4\" />\n        </Button>\n      </header>\n\n      {/* Centered Login Card */}\n      <div className=\"min-h-screen w-full grid place-items-center px-4 py-20\">\n        <Card className=\"card-animate w-full max-w-md border-zinc-800 bg-zinc-900/70 backdrop-blur supports-[backdrop-filter]:bg-zinc-900/60\">\n          <CardHeader className=\"space-y-1\">\n            <CardTitle className=\"text-2xl\">Welcome back</CardTitle>\n            <CardDescription className=\"text-zinc-400\">\n              Sign in to your account\n            </CardDescription>\n          </CardHeader>\n\n          <CardContent className=\"grid gap-5\">\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"email\" className=\"text-zinc-300\">\n                Email\n              </Label>\n              <div className=\"relative\">\n                <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-zinc-500\" />\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"you@example.com\"\n                  className=\"pl-10 bg-black border-zinc-800 text-zinc-50 placeholder:text-zinc-600\"\n                />\n              </div>\n            </div>\n\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"password\" className=\"text-zinc-300\">\n                Password\n              </Label>\n              <div className=\"relative\">\n                <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-zinc-500\" />\n                <Input\n                  id=\"password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  placeholder=\"••••••••\"\n                  className=\"pl-10 pr-10 bg-black border-zinc-800 text-zinc-50 placeholder:text-zinc-600\"\n                />\n                <button\n                  type=\"button\"\n                  aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n                  className=\"absolute right-2 top-1/2 -translate-y-1/2 p-2 rounded-md text-zinc-400 hover:text-zinc-200\"\n                  onClick={() => setShowPassword((v) => !v)}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-4 w-4\" />\n                  ) : (\n                    <Eye className=\"h-4 w-4\" />\n                  )}\n                </button>\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <Checkbox\n                  id=\"remember\"\n                  className=\"border-zinc-700 data-[state=checked]:bg-zinc-50 data-[state=checked]:text-zinc-900\"\n                />\n                <Label htmlFor=\"remember\" className=\"text-zinc-400\">\n                  Remember me\n                </Label>\n              </div>\n              <a href=\"#\" className=\"text-sm text-zinc-300 hover:text-zinc-100\">\n                Forgot password?\n              </a>\n            </div>\n\n            <Button className=\"w-full h-10 rounded-lg bg-zinc-50 text-zinc-900 hover:bg-zinc-200\">\n              Continue\n            </Button>\n\n            <div className=\"relative\">\n              <Separator className=\"bg-zinc-800\" />\n              <span className=\"absolute left-1/2 -translate-x-1/2 -top-3 bg-zinc-900/70 px-2 text-[11px] uppercase tracking-widest text-zinc-500\">\n                or\n              </span>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-3\">\n              <Button\n                variant=\"outline\"\n                className=\"h-10 rounded-lg border-zinc-800 bg-black text-zinc-50 hover:bg-zinc-900/80\"\n              >\n                <Github className=\"h-4 w-4 mr-2\" />\n                GitHub\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"h-10 rounded-lg border-zinc-800 bg-black text-zinc-50 hover:bg-zinc-900/80\"\n              >\n                <Chrome className=\"h-4 w-4 mr-2\" />\n                Google\n              </Button>\n            </div>\n          </CardContent>\n\n          <CardFooter className=\"flex items-center justify-center text-sm text-zinc-400\">\n            Don&apos;t have an account?\n            <a className=\"ml-1 text-zinc-200 hover:underline\" href=\"#\">\n              Create one\n            </a>\n          </CardFooter>\n        </Card>\n      </div>\n    </section>\n  );\n}\n\n",
      "type": "registry:component"
    }
  ]
}