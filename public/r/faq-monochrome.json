{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "faq-monochrome",
  "type": "registry:block",
  "title": "FAQ Monochrome",
  "description": "Elegant monochrome FAQ section with theme toggle, animated intro badge, and smooth hover effects",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/default/faq-monochrome.tsx",
      "content": "\"use client\"\n\nimport React, { useEffect, useMemo, useState } from \"react\";\n\nconst INTRO_STYLE_ID = \"faq1-animations\";\n\nconst faqs = [\n  {\n    question: \"How do you decide which problems to solve first?\",\n    answer:\n      \"We map opportunities across impact, feasibility, and effort, then prototype the riskiest assumption within 72 hours to make sure we are shipping momentum, not guesswork.\",\n    meta: \"Discovery\",\n  },\n  {\n    question: \"What does collaboration look like once we start?\",\n    answer:\n      \"A dedicated trio of design, engineering, and strategy meets daily in a shared async dashboard. Decisions are recorded in-line, so the team, stakeholders, and audit trail stay perfectly aligned.\",\n    meta: \"Collaboration\",\n  },\n  {\n    question: \"Can you adapt to an existing design system or stack?\",\n    answer:\n      \"Yes. We map tokens, components, and build steps into our pipeline on day one. If a gap appears, we patch the system with regression tests so velocity never compromises fidelity.\",\n    meta: \"Systems\",\n  },\n  {\n    question: \"How is quality validated before release?\",\n    answer:\n      \"Accessibility sweeps, automated visual diffs, and performance budgets run on every merge. We ship only after the experience hits the expected thresholds on real devices.\",\n    meta: \"Quality\",\n  },\n];\n\nconst palettes = {\n  dark: {\n    surface: \"bg-neutral-950 text-neutral-100\",\n    panel: \"bg-neutral-900/50\",\n    border: \"border-white/10\",\n    heading: \"text-white\",\n    muted: \"text-neutral-400\",\n    iconRing: \"border-white/20\",\n    iconSurface: \"bg-white/5\",\n    icon: \"text-white\",\n    toggle: \"border-white/20 text-white\",\n    toggleSurface: \"bg-white/10\",\n    glow: \"rgba(255, 255, 255, 0.08)\",\n    aurora: \"radial-gradient(ellipse 50% 100% at 10% 0%, rgba(226, 232, 240, 0.15), transparent 65%), #000000\",\n    shadow: \"shadow-[0_36px_140px_-60px_rgba(10,10,10,0.95)]\",\n    overlay: \"linear-gradient(130deg, rgba(255,255,255,0.04) 0%, transparent 65%)\",\n  },\n  light: {\n    surface: \"bg-slate-100 text-neutral-900\",\n    panel: \"bg-white/70\",\n    border: \"border-neutral-200\",\n    heading: \"text-neutral-900\",\n    muted: \"text-neutral-600\",\n    iconRing: \"border-neutral-300\",\n    iconSurface: \"bg-neutral-900/5\",\n    icon: \"text-neutral-900\",\n    toggle: \"border-neutral-200 text-neutral-900\",\n    toggleSurface: \"bg-white\",\n    glow: \"rgba(15, 15, 15, 0.08)\",\n    aurora: \"radial-gradient(ellipse 50% 100% at 10% 0%, rgba(15, 23, 42, 0.08), rgba(255, 255, 255, 0.95) 70%)\",\n    shadow: \"shadow-[0_36px_120px_-70px_rgba(15,15,15,0.18)]\",\n    overlay: \"linear-gradient(130deg, rgba(15,23,42,0.08) 0%, transparent 70%)\",\n  },\n};\n\nexport default function FAQMonochrome() {\n  const getRootTheme = (): \"dark\" | \"light\" => {\n    if (typeof document === \"undefined\") return \"dark\";\n    if (document.documentElement.classList.contains(\"dark\")) return \"dark\";\n    if (document.documentElement.classList.contains(\"light\")) return \"light\";\n    if (typeof window !== \"undefined\" && window.matchMedia) {\n      return window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n    }\n    return \"light\";\n  };\n\n  const [theme, setTheme] = useState<\"dark\" | \"light\">(getRootTheme);\n  const [introReady, setIntroReady] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [hasEntered, setHasEntered] = useState(false);\n\n  useEffect(() => {\n    if (typeof document === \"undefined\") return;\n    if (document.getElementById(INTRO_STYLE_ID)) return;\n    const style = document.createElement(\"style\");\n    style.id = INTRO_STYLE_ID;\n    style.innerHTML = `\n      @keyframes faq1-fade-up {\n        0% { transform: translate3d(0, 20px, 0); opacity: 0; filter: blur(6px); }\n        60% { filter: blur(0); }\n        100% { transform: translate3d(0, 0, 0); opacity: 1; filter: blur(0); }\n      }\n      @keyframes faq1-beam-spin {\n        0% { transform: rotate(0deg) scale(1); }\n        100% { transform: rotate(360deg) scale(1); }\n      }\n      @keyframes faq1-pulse {\n        0% { transform: scale(0.7); opacity: 0.55; }\n        60% { opacity: 0.1; }\n        100% { transform: scale(1.25); opacity: 0; }\n      }\n      @keyframes faq1-meter {\n        0%, 20% { transform: scaleX(0); transform-origin: left; }\n        45%, 60% { transform: scaleX(1); transform-origin: left; }\n        80%, 100% { transform: scaleX(0); transform-origin: right; }\n      }\n      @keyframes faq1-tick {\n        0%, 30% { transform: translateX(-6px); opacity: 0.4; }\n        50% { transform: translateX(2px); opacity: 1; }\n        100% { transform: translateX(20px); opacity: 0; }\n      }\n      .faq1-intro {\n        position: relative;\n        display: flex;\n        align-items: center;\n        gap: 0.85rem;\n        padding: 0.85rem 1.4rem;\n        border-radius: 9999px;\n        overflow: hidden;\n        border: 1px solid rgba(255, 255, 255, 0.12);\n        background: rgba(12, 12, 12, 0.42);\n        color: rgba(248, 250, 252, 0.92);\n        text-transform: uppercase;\n        letter-spacing: 0.35em;\n        font-size: 0.65rem;\n        width: 100%;\n        max-width: 24rem;\n        margin: 0 auto;\n        mix-blend-mode: screen;\n        opacity: 0;\n        transform: translate3d(0, 12px, 0);\n        filter: blur(8px);\n        transition: opacity 720ms ease, transform 720ms ease, filter 720ms ease;\n        isolation: isolate;\n      }\n      .faq1-intro--light {\n        border-color: rgba(17, 17, 17, 0.12);\n        background: rgba(248, 250, 252, 0.88);\n        color: rgba(15, 23, 42, 0.78);\n        mix-blend-mode: multiply;\n      }\n      .faq1-intro--active {\n        opacity: 1;\n        transform: translate3d(0, 0, 0);\n        filter: blur(0);\n      }\n      .faq1-intro__beam,\n      .faq1-intro__pulse {\n        position: absolute;\n        inset: -110%;\n        pointer-events: none;\n        border-radius: 50%;\n      }\n      .faq1-intro__beam {\n        background: conic-gradient(from 160deg, rgba(226, 232, 240, 0.25), transparent 32%, rgba(148, 163, 184, 0.22) 58%, transparent 78%, rgba(148, 163, 184, 0.18));\n        animation: faq1-beam-spin 18s linear infinite;\n        opacity: 0.55;\n      }\n      .faq1-intro--light .faq1-intro__beam {\n        background: conic-gradient(from 180deg, rgba(15, 23, 42, 0.18), transparent 30%, rgba(71, 85, 105, 0.18) 58%, transparent 80%, rgba(15, 23, 42, 0.14));\n      }\n      .faq1-intro__pulse {\n        border: 1px solid currentColor;\n        opacity: 0.25;\n        animation: faq1-pulse 3.4s ease-out infinite;\n      }\n      .faq1-intro__label {\n        position: relative;\n        z-index: 1;\n        font-weight: 600;\n        letter-spacing: 0.4em;\n      }\n      .faq1-intro__meter {\n        position: relative;\n        z-index: 1;\n        flex: 1 1 auto;\n        height: 1px;\n        background: linear-gradient(90deg, transparent, currentColor 35%, transparent 85%);\n        transform: scaleX(0);\n        transform-origin: left;\n        animation: faq1-meter 5.8s ease-in-out infinite;\n        opacity: 0.7;\n      }\n      .faq1-intro__tick {\n        position: relative;\n        z-index: 1;\n        width: 0.55rem;\n        height: 0.55rem;\n        border-radius: 9999px;\n        background: currentColor;\n        box-shadow: 0 0 0 4px rgba(255, 255, 255, 0.1);\n        animation: faq1-tick 3.2s ease-in-out infinite;\n      }\n      .faq1-intro--light .faq1-intro__tick {\n        box-shadow: 0 0 0 4px rgba(15, 15, 15, 0.08);\n      }\n      .faq1-fade {\n        opacity: 0;\n        transform: translate3d(0, 24px, 0);\n        filter: blur(12px);\n        transition: opacity 700ms ease, transform 700ms ease, filter 700ms ease;\n      }\n      .faq1-fade--ready {\n        animation: faq1-fade-up 860ms cubic-bezier(0.22, 0.68, 0, 1) forwards;\n      }\n    `;\n\n    document.head.appendChild(style);\n\n    return () => {\n      if (style.parentNode) style.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (typeof window === \"undefined\") {\n      setIntroReady(true);\n      return;\n    }\n    const frame = window.requestAnimationFrame(() => setIntroReady(true));\n    return () => window.cancelAnimationFrame(frame);\n  }, []);\n\n  useEffect(() => {\n    if (typeof document === \"undefined\") return;\n\n    const applyThemeFromRoot = () => setTheme(getRootTheme());\n\n    applyThemeFromRoot();\n\n    const observer = new MutationObserver(applyThemeFromRoot);\n    observer.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: [\"class\", \"data-theme\"],\n    });\n\n    const handleStorage = (event: StorageEvent) => {\n      if (event.key === \"bento-theme\") applyThemeFromRoot();\n    };\n\n    window.addEventListener(\"storage\", handleStorage);\n\n    return () => {\n      observer.disconnect();\n      window.removeEventListener(\"storage\", handleStorage);\n    };\n  }, []);\n\n  const palette = useMemo(() => palettes[theme], [theme]);\n\n  const toggleTheme = () => {\n    if (typeof document === \"undefined\") return;\n    const root = document.documentElement;\n    const next = root.classList.contains(\"dark\") ? \"light\" : \"dark\";\n    root.classList.toggle(\"dark\", next === \"dark\");\n    setTheme(next);\n    try {\n      window.localStorage?.setItem(\"bento-theme\", next);\n    } catch {\n      /* ignore */\n    }\n  };\n  const toggleQuestion = (index: number) => setActiveIndex((prev) => (prev === index ? -1 : index));\n\n  useEffect(() => {\n    if (typeof window === \"undefined\") {\n      setHasEntered(true);\n      return;\n    }\n\n    let timeout: NodeJS.Timeout;\n    const onLoad = () => {\n      timeout = setTimeout(() => setHasEntered(true), 120);\n    };\n\n    if (document.readyState === \"complete\") {\n      onLoad();\n    } else {\n      window.addEventListener(\"load\", onLoad, { once: true });\n    }\n\n    return () => {\n      window.removeEventListener(\"load\", onLoad);\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  const setCardGlow = (event: React.MouseEvent<HTMLLIElement>) => {\n    const target = event.currentTarget;\n    const rect = target.getBoundingClientRect();\n    target.style.setProperty(\"--faq-x\", `${event.clientX - rect.left}px`);\n    target.style.setProperty(\"--faq-y\", `${event.clientY - rect.top}px`);\n  };\n\n  const clearCardGlow = (event: React.MouseEvent<HTMLLIElement>) => {\n    const target = event.currentTarget;\n    target.style.removeProperty(\"--faq-x\");\n    target.style.removeProperty(\"--faq-y\");\n  };\n\n  return (\n    <div className={`relative min-h-screen w-full overflow-hidden transition-colors duration-700 ${palette.surface}`}>\n      <div className=\"absolute inset-0 z-0\" style={{ background: palette.aurora }} />\n      <div\n        className=\"pointer-events-none absolute inset-0 z-0 opacity-80\"\n        style={{ background: palette.overlay, mixBlendMode: theme === \"dark\" ? \"screen\" : \"multiply\" }}\n      />\n\n      <section\n        className={`relative z-10 mx-auto flex max-w-4xl flex-col gap-12 px-6 py-24 lg:max-w-5xl lg:px-12 ${\n          hasEntered ? \"faq1-fade--ready\" : \"faq1-fade\"\n        }`}\n      >\n        <div\n          className={`faq1-intro ${introReady ? \"faq1-intro--active\" : \"\"} ${\n            theme === \"light\" ? \"faq1-intro--light\" : \"faq1-intro--dark\"\n          }`}\n        >\n          <span className=\"faq1-intro__beam\" aria-hidden=\"true\" />\n          <span className=\"faq1-intro__pulse\" aria-hidden=\"true\" />\n          <span className=\"faq1-intro__label\">Signal FAQ</span>\n          <span className=\"faq1-intro__meter\" aria-hidden=\"true\" />\n          <span className=\"faq1-intro__tick\" aria-hidden=\"true\" />\n        </div>\n\n        <header className=\"flex flex-col gap-8 md:flex-row md:items-end md:justify-between\">\n          <div className=\"space-y-4\">\n            <p className={`text-xs uppercase tracking-[0.35em] ${palette.muted}`}>Questions</p>\n            <h1 className={`text-4xl font-semibold leading-tight md:text-5xl ${palette.heading}`}>\n              Focus on the signal, not the noise.\n            </h1>\n            <p className={`max-w-xl text-base ${palette.muted}`}>\n              Everything you need to know about partnering with our team, condensed into calm monochrome clarity.\n            </p>\n          </div>\n\n          <button\n            type=\"button\"\n            onClick={toggleTheme}\n            className={`relative inline-flex h-11 items-center gap-3 rounded-full border px-5 text-sm font-medium transition-colors duration-500 ${palette.toggleSurface} ${palette.toggle}`}\n            aria-pressed={theme === \"dark\" ? \"true\" : \"false\"}\n          >\n            <span className=\"relative flex h-6 w-6 items-center justify-center\">\n              <span\n                className={`pointer-events-none absolute inset-0 rounded-full border opacity-40 ${\n                  theme === \"dark\" ? \"border-white/30 animate-pulse\" : \"border-neutral-400/50\"\n                }`}\n              />\n              <span\n                className={`h-3 w-3 rounded-full transition-all duration-500 ${\n                  theme === \"dark\" ? \"bg-white\" : \"bg-neutral-900\"\n                }`}\n              />\n            </span>\n            {theme === \"dark\" ? \"Night\" : \"Day\"} mode\n          </button>\n        </header>\n\n        <ul className=\"space-y-4\">\n          {faqs.map((item, index) => {\n            const open = activeIndex === index;\n            const panelId = `faq-panel-${index}`;\n            const buttonId = `faq-trigger-${index}`;\n\n            return (\n              <li\n                key={item.question}\n                className={`group relative overflow-hidden rounded-3xl border backdrop-blur-xl transition-all duration-500 hover:-translate-y-0.5 focus-within:-translate-y-0.5 ${palette.border} ${palette.panel} ${palette.shadow}`}\n                onMouseMove={setCardGlow}\n                onMouseLeave={clearCardGlow}\n              >\n                <div\n                  className={`pointer-events-none absolute inset-0 transition-opacity duration-500 ${\n                    open ? \"opacity-100\" : \"opacity-0 group-hover:opacity-100\"\n                  }`}\n                  style={{\n                    background: `radial-gradient(240px circle at var(--faq-x, 50%) var(--faq-y, 50%), ${palette.glow}, transparent 70%)`,\n                  }}\n                />\n\n                <button\n                  type=\"button\"\n                  id={buttonId}\n                  aria-controls={panelId}\n                  aria-expanded={open}\n                  onClick={() => toggleQuestion(index)}\n                  style={{ \"--faq-outline\": theme === \"dark\" ? \"rgba(255,255,255,0.35)\" : \"rgba(17,17,17,0.25)\" } as React.CSSProperties}\n                  className=\"relative flex w-full items-start gap-6 px-8 py-7 text-left transition-colors duration-300 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-4 focus-visible:outline-[var(--faq-outline)]\"\n                >\n                  <span\n                    className={`relative flex h-12 w-12 shrink-0 items-center justify-center rounded-full border transition-all duration-500 group-hover:scale-105 ${palette.iconRing} ${palette.iconSurface}`}\n                  >\n                    <span\n                      className={`pointer-events-none absolute inset-0 rounded-full border opacity-30 ${\n                        palette.iconRing\n                      } ${open ? \"animate-ping\" : \"\"}`}\n                    />\n                    <svg\n                      className={`relative h-5 w-5 transition-transform duration-500 ${palette.icon} ${open ? \"rotate-45\" : \"\"}`}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path d=\"M12 5v14\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                      <path d=\"M5 12h14\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                    </svg>\n                  </span>\n\n                  <div className=\"flex flex-1 flex-col gap-4\">\n                    <div className=\"flex flex-col gap-3 sm:flex-row sm:items-center sm:gap-4\">\n                      <h2 className={`text-lg font-medium leading-tight sm:text-xl ${palette.heading}`}>\n                        {item.question}\n                      </h2>\n                      {item.meta && (\n                        <span\n                          className={`inline-flex w-fit items-center rounded-full border px-3 py-1 text-[10px] uppercase tracking-[0.35em] transition-opacity duration-300 sm:ml-auto ${palette.border} ${palette.muted}`}\n                        >\n                          {item.meta}\n                        </span>\n                      )}\n                    </div>\n\n                    <div\n                      id={panelId}\n                      role=\"region\"\n                      aria-labelledby={buttonId}\n                      className={`overflow-hidden text-sm leading-relaxed transition-[max-height] duration-500 ease-out ${\n                        open ? \"max-h-64\" : \"max-h-0\"\n                      } ${palette.muted}`}\n                    >\n                      <p className=\"pr-2\">\n                        {item.answer}\n                      </p>\n                    </div>\n                  </div>\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n    </div>\n  );\n}\n\n",
      "type": "registry:component"
    }
  ]
}